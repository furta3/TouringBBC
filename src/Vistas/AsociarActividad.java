/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import BD.Conexion;
import Clases.Actividad;
import Clases.Cuota;
import Clases.Horario;
import Clases.Jugador;
import Clases.Socio;
import Clases.SocioActividad;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nacho
 */
public class AsociarActividad extends javax.swing.JPanel {

    /**
     * Creates new form PanelVacio
     */
    Principal main;
    Socio s;
    SocioActividad sa;
    public AsociarActividad(Principal main,Socio s, SocioActividad sa) {
        initComponents();
        this.main = main;
        this.s = s;
        this.sa  = sa;
        if(sa==null)
            Load();
        else{
            LoadMod();
        }
    }
    
    public void Load(){
        lSocio.setText(s.getNombre()+" "+s.getApellido());
        
        //List<Actividad> act;
        //act = Conexion.getInstance().getActividades();
        if(main.actividades.size()>0){
            DefaultComboBoxModel dcm = new DefaultComboBoxModel();
            for(Actividad act: main.actividades){
                if(act.isVigente()){
                    dcm.addElement(act);
                }
            }
            cbActividades.setModel(dcm);
            cargarHorarios();
            Actividad a = (Actividad) cbActividades.getSelectedItem();
            System.out.println("size de cuotas: "+a.getCuotas().size());
            if(a.getCuotas().size()>0){
                DefaultComboBoxModel dcm2 = new DefaultComboBoxModel();
                for(Cuota c: a.getCuotas()){
                    if(c.isVigente()){
                        dcm2.addElement(c);
                    }
                }
                cbCuotas.setModel(dcm2);
            }
            else
                cbCuotas.setModel(new DefaultComboBoxModel());
        }
        
        
        
        btnEliminar.setVisible(false);
    }
    public void LoadMod(){
        lSocio.setText(s.getNombre()+" "+s.getApellido());
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        dcm.addElement(sa.getActividades().getNombre());
        cbActividades.setModel(dcm);
        Iterator<Horario> it = sa.getActividades().getHorarios().iterator();
        
        DefaultTableModel mdl = (DefaultTableModel) tHorarios.getModel();
        mdl.setRowCount(0);
        while (it.hasNext()) {
            Horario s = it.next();
            if (s.isVigente()) {  
                Object[] fila = new Object[4];
                fila[0] = s;
                fila[1] = s.getHora();
                fila[2] = s.getDuracion();
                if(sa.getHorarios().contains(s))
                    fila[3] = true;
                mdl.addRow(fila); 
            }
        }
        cbActividades.enable(false);
        btnEliminar.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tHorarios = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lSocio = new javax.swing.JLabel();
        cbActividades = new javax.swing.JComboBox<>();
        btnConfirmar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();
        cbCuotas = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lCupos = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        tHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Día", "Hora", "Duración", "Seleccionar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tHorarios);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setText("Asociar Actividad");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel1.setText("Socio:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setText("Actividad:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel4.setText("Horarios");

        lSocio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lSocio.setText("[Nombre  y apellido]");

        cbActividades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbActividades.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbActividadesItemStateChanged(evt);
            }
        });

        btnConfirmar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAtras.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnAtras.setText("Volver");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        cbCuotas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel5.setText("Cuota:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel6.setText("Cupos:");

        lCupos.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lCupos.setText("lCupos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnConfirmar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lCupos)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbCuotas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lSocio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbActividades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(175, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnAtras)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(23, 23, 23)
                .addComponent(jLabel4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lSocio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbActividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lCupos))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnConfirmar)
                            .addComponent(btnEliminar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(btnAtras)
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbActividadesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbActividadesItemStateChanged
        // TODO add your handling code here:
        cargarHorarios();
    }//GEN-LAST:event_cbActividadesItemStateChanged

    
    public void cargarHorarios(){
        Actividad a = (Actividad) cbActividades.getSelectedItem();
        Conexion.getInstance().refresh(a);
        if(a.getCuotas().size()>0){
            DefaultComboBoxModel dcm2 = new DefaultComboBoxModel();
            for(Cuota c: a.getCuotas()){
                if(c.isVigente()){
                    dcm2.addElement(c);
                }
            }
            cbCuotas.setModel(dcm2);
        }
        else
            cbCuotas.setModel(new DefaultComboBoxModel());
        System.out.println("size de horarios de a:  "+a.getHorarios().size());
        Iterator<Horario> it = a.getHorarios().iterator();
        
        DefaultTableModel mdl = (DefaultTableModel) tHorarios.getModel();
        mdl.setRowCount(0);
        while (it.hasNext()) {
            Horario s = it.next();
            if (s.isVigente()) {  
                Object[] fila = new Object[4];
                fila[0] = s;
                fila[1] = s.getHora();
                fila[2] = s.getDuracion();
                fila[3] = false;
                mdl.addRow(fila); 
            }
        }
        lCupos.setText(""+(a.getCupos()- a.getSocios().size()));
    }
    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        if(sa==null){
            List<Horario> hs =new ArrayList<Horario>();
                for(int f = 0;f<tHorarios.getRowCount();f++){
                    if((boolean) tHorarios.getValueAt(f, 3) == true){
                        hs.add((Horario)tHorarios.getValueAt(f, 0));
                    }
                }
            Actividad act = (Actividad)cbActividades.getSelectedItem();
            if(cbActividades.getItemCount() == 0 || cbCuotas.getItemCount() == 0){
                JOptionPane.showMessageDialog(this, "La actividad o cuota no puede estar vacía.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if(hs.size()==0){
                JOptionPane.showMessageDialog(this, "Tiene que seleccionar al menos un horario.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else if(act.getCupos() - act.getSocios().size() <=0){
                JOptionPane.showMessageDialog(this, "No hay cupos disponibles para esta actividad.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else{
                SocioActividad sa = new  SocioActividad();
                sa.setActividades((Actividad)cbActividades.getSelectedItem());
                sa.setSocios(s);
                sa.setCuota((Cuota) cbCuotas.getSelectedItem());
                
                sa.setHorarios(hs);
                Conexion.getInstance().persist(sa);
                Conexion.getInstance().merge(s);
                main.socios.set(main.socios.indexOf(s), s);
                volver();
                
            }
            /*else{
                SocioActividad sa = new  SocioActividad();
                sa.setActividades((Actividad)cbActividades.getSelectedItem());
                sa.setSocios(s);
                List<Horario> hs =new ArrayList<Horario>();
                for(int f = 0;f<tHorarios.getRowCount();f++){
                    if((boolean) tHorarios.getValueAt(f, 3) == true){
                         hs.add((Horario)tHorarios.getValueAt(f, 0));
                    }
                }
                sa.setHorarios(hs);
                Conexion.getInstance().persist(sa);
                volver();
            }
            */
        }
        else{
            sa.getHorarios().clear();
            
            for(int f = 0;f<tHorarios.getRowCount();f++){
                if((boolean) tHorarios.getValueAt(f, 3) == true){
                    sa.getHorarios().add((Horario)tHorarios.getValueAt(f, 0));
                }
            }
            Conexion.getInstance().merge(sa);
            
            volver();
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        volver();
    }//GEN-LAST:event_btnAtrasActionPerformed
    public void volver(){
        DetallesSocio dj = new DetallesSocio(main,s);
        main.AbrirDetallesJugador(dj);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox<String> cbActividades;
    private javax.swing.JComboBox<String> cbCuotas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lCupos;
    private javax.swing.JLabel lSocio;
    private javax.swing.JTable tHorarios;
    // End of variables declaration//GEN-END:variables
}
