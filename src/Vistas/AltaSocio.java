/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import java.awt.Component;
import BD.Conexion;
import Clases.Actividad;
import Clases.Categoria;
import Clases.Cuota;
import Clases.Familia;
import Clases.Jugador;
import Clases.Socio;
import Clases.TipoSocio;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nacho
 */
public class AltaSocio extends javax.swing.JPanel {

    /**
     * Creates new form GUIABMSocios
     */
    Familia f;
    Principal main;
    Socio sel;
    int vol=0;
    public AltaSocio(Principal main, Familia f) {
        initComponents();
        this.main = main;
        this.f = f;

        if(f!=null){
            AgregarNuevosFamiliares();
            cargarFamiliares();
            vol=1;
        }
        else{
            Familiar(false);
        }
            
        dcFechaIngreso.setDate(new Date());
        List<TipoSocio> ts;
        ts = Conexion.getInstance().getTiposSocios();
        DefaultComboBoxModel dcm = new DefaultComboBoxModel();
        dcm.addElement("Seleccionar");
        for(TipoSocio tipo: ts){
            if(tipo.isVigente()){
                dcm.addElement(tipo);
            }
        }
        cbTipoSocio.setModel(dcm);
       
        List<Cuota> cuotas;
        cuotas = Conexion.getInstance().getCuotas();
        DefaultComboBoxModel dcm2 = new DefaultComboBoxModel();
        dcm2.addElement("Ninguna");
        for(Cuota tipo: cuotas){
                if(tipo.isVigente()){
                        dcm2.addElement(tipo);
                }
        }
        cbCuotas.setModel(dcm2);
        cbCuotas2.setModel(dcm2);
        
        List<Categoria> cat;
        cat = Conexion.getInstance().getCategorias();
        DefaultComboBoxModel dcm3 = new DefaultComboBoxModel();
        dcm3.addElement("Seleccionar");
        for(Categoria tipo: cat){
                if(tipo.isVigente()){
                        dcm3.addElement(tipo);
                }
        }
        cbCat.setModel(dcm3);
        
        Jugador(false);
    }
    
    public void cargarFamiliares(){
        Conexion.getInstance().refresh(f);
        Iterator<Socio> it = f.getSocios().iterator();
        DefaultTableModel mdl = (DefaultTableModel) tFamiliares.getModel();
        mdl.setRowCount(0);
        while (it.hasNext()) {
            Socio s = it.next();
            if (s.isVigente()) {  
                Object[] fila = new Object[4];
                fila[0] = s;
                fila[1] = s.getApellido();
                fila[2] = s.getFechaNac();
                fila[3] = s.getRol();
                mdl.addRow(fila); 
            }
        }
        /*
        if(mdl.getRowCount()>0)
            cbFamilia.enable(true);
        */
    }
    
    public void addFamiliar(Socio a){
        DefaultTableModel mdl = (DefaultTableModel) tFamiliares.getModel();
        Object[] fila = new Object[4];
        fila[0] = a;
        fila[1] = a.getApellido();
        fila[2] = a.getFechaNac();
        fila[3] = a.getRol();
        mdl.addRow(fila); 
    }
    public void addFamiliar(Jugador a){
        DefaultTableModel mdl = (DefaultTableModel) tFamiliares.getModel();
        Object[] fila = new Object[4];
        fila[0] = a;
        fila[1] = a.getApellido();
        fila[2] = a.getFechaNac();
        fila[3] = a.getRol();
        mdl.addRow(fila); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dcFechaIngreso = new com.toedter.calendar.JDateChooser();
        tfCI = new javax.swing.JTextField();
        tfNombre = new javax.swing.JTextField();
        tfApellido = new javax.swing.JTextField();
        tfTelefono = new javax.swing.JTextField();
        tfDireccion = new javax.swing.JTextField();
        dcFechaNac = new com.toedter.calendar.JDateChooser();
        cbTipoSocio = new javax.swing.JComboBox<>();
        cbCuotas = new javax.swing.JComboBox<>();
        panelJugador = new javax.swing.JPanel();
        lPlantel = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        dcVenCi = new com.toedter.calendar.JDateChooser();
        cbCat = new javax.swing.JComboBox<>();
        dcCarnetHab = new com.toedter.calendar.JDateChooser();
        cbTipoCarnet = new javax.swing.JComboBox<>();
        lTipoCarnet = new javax.swing.JLabel();
        lVenCarnet = new javax.swing.JLabel();
        panelFamilia = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tFamiliares = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        cbCuotas2 = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        checkJ = new javax.swing.JCheckBox();
        checkF = new javax.swing.JCheckBox();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lCarnet1 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tfCI.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tfCI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCIActionPerformed(evt);
            }
        });
        tfCI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfCIKeyPressed(evt);
            }
        });

        tfNombre.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tfNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNombreActionPerformed(evt);
            }
        });

        tfApellido.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        tfTelefono.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        tfDireccion.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        cbTipoSocio.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbTipoSocio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Común", "Jugador", "Vitalicio", "Contribuyente", " " }));
        cbTipoSocio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoSocioActionPerformed(evt);
            }
        });

        cbCuotas.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbCuotas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Común", "Jugador", "Vitalicio", "Contribuyente", " " }));
        cbCuotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCuotasActionPerformed(evt);
            }
        });

        panelJugador.setBackground(new java.awt.Color(255, 255, 255));
        panelJugador.setBorder(javax.swing.BorderFactory.createTitledBorder("Jugador"));
        panelJugador.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        lPlantel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lPlantel.setText("Categoría:");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel14.setText("Ven. Cédula:");

        cbCat.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCatActionPerformed(evt);
            }
        });

        cbTipoCarnet.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbTipoCarnet.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salud", "Adolescente", "Niño" }));
        cbTipoCarnet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoCarnetActionPerformed(evt);
            }
        });

        lTipoCarnet.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lTipoCarnet.setText("Carnet de:");

        lVenCarnet.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lVenCarnet.setText("Vecimiento:");

        javax.swing.GroupLayout panelJugadorLayout = new javax.swing.GroupLayout(panelJugador);
        panelJugador.setLayout(panelJugadorLayout);
        panelJugadorLayout.setHorizontalGroup(
            panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJugadorLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lTipoCarnet)
                    .addComponent(lVenCarnet)
                    .addComponent(jLabel14)
                    .addComponent(lPlantel))
                .addGap(45, 45, 45)
                .addGroup(panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCat, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcVenCi, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTipoCarnet, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcCarnetHab, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelJugadorLayout.setVerticalGroup(
            panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelJugadorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPlantel)
                    .addComponent(cbCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcVenCi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(32, 32, 32)
                .addGroup(panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoCarnet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lTipoCarnet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelJugadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcCarnetHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lVenCarnet))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        panelFamilia.setBackground(new java.awt.Color(255, 255, 255));
        panelFamilia.setBorder(javax.swing.BorderFactory.createTitledBorder("Familiares"));
        panelFamilia.setToolTipText("");

        tFamiliares.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tFamiliares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Nacimiento", "Principal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tFamiliares.setColumnSelectionAllowed(true);
        tFamiliares.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tFamiliaresMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tFamiliares);
        tFamiliares.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jButton2.setText("Quitar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel15.setText("Cuota:");

        cbCuotas2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cbCuotas2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Común", "Jugador", "Vitalicio", "Contribuyente", " " }));
        cbCuotas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCuotas2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFamiliaLayout = new javax.swing.GroupLayout(panelFamilia);
        panelFamilia.setLayout(panelFamiliaLayout);
        panelFamiliaLayout.setHorizontalGroup(
            panelFamiliaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFamiliaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(panelFamiliaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFamiliaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(panelFamiliaLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(cbCuotas2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFamiliaLayout.setVerticalGroup(
            panelFamiliaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFamiliaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFamiliaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cbCuotas2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnAgregar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        checkJ.setBackground(new java.awt.Color(255, 255, 255));
        checkJ.setText("Jugador");
        checkJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkJActionPerformed(evt);
            }
        });

        checkF.setBackground(new java.awt.Color(255, 255, 255));
        checkF.setText("Familiar");
        checkF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkFActionPerformed(evt);
            }
        });

        btnConfirmar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnConfirmar.setText("Confirmar alta");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Alta Socio");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel8.setText("Cédula:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setText("Apellido:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel4.setText("Teléfono:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel5.setText("Dirección:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel9.setText("Fecha Nac.");

        lCarnet1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lCarnet1.setText("Fecha ingreso:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel12.setText("Tipo socio:");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel13.setText("Cuota:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lCarnet1)
                            .addGap(35, 35, 35)
                            .addComponent(dcFechaIngreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel9)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13))
                            .addGap(53, 53, 53)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfCI, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfApellido, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfTelefono, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfDireccion, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dcFechaNac, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbTipoSocio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(checkJ))
                    .addComponent(checkF)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConfirmar)
                        .addGap(18, 18, 18)
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar)))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelJugador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 366, Short.MAX_VALUE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lCarnet1))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(tfCI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dcFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(cbTipoSocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkJ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkF)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnConfirmar)
                            .addComponent(btnCancelar)))
                    .addComponent(panelFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNombreActionPerformed

    private void tfCIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCIActionPerformed

    private void tfCIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCIKeyPressed
        // TODO add your handling code here:
        if(evt.equals("a"))
            evt.consume();
    }//GEN-LAST:event_tfCIKeyPressed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        //Socio p = new Socio();
        //p.setCi(parseInt(tfCI.getText()));
        
        if(!esCIValida(tfCI.getText())){
            JOptionPane.showMessageDialog(this, "Cédula invalida", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if(tfNombre.getText().equals("") || tfApellido.getText().equals("")){
            JOptionPane.showMessageDialog(this, "El nombre y el apellido no pueden estar vacíos", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if(dcFechaIngreso.getDate().after(new Date())){
            JOptionPane.showMessageDialog(this, "La fecha de ingreso no puede ser mayor a la actual", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if(checkJ.isSelected() && (dcVenCi.getDate() ==  null || dcCarnetHab.getDate() == null)){
            JOptionPane.showMessageDialog(this, "El vencimiento del carnet de salud y cédula no puede estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if(cbTipoSocio.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Seleccione un tipo de socio.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if(checkJ.isSelected() && cbCat.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Seleccione una categoría para el jugador.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if(checkF.isSelected() && tFamiliares.getRowCount()>=4)
            JOptionPane.showMessageDialog(this, "Familia completa.", "Error", JOptionPane.ERROR_MESSAGE);
        else if(Conexion.getInstance().findSocio(parseInt(tfCI.getText()))!=null){
            if (JOptionPane.showConfirmDialog(this, "Ya existe el socio en el sistema ¿Desea activarlo de nuevo?", "Consulta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                Socio v = Conexion.getInstance().findSocio(parseInt(tfCI.getText()));
                v.setVigente(true);
                Conexion.getInstance().merge(v);
                limpiar();
                JOptionPane.showMessageDialog(this, "Socio reactivado: ci: "+v.getCi()+", nombre: "+v.getNombre()+", apellido: "+v.getApellido()+".", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
        else{
            if(checkJ.isSelected()){
                Jugador j = new Jugador();
                j.setNombre(tfNombre.getText());
                j.setApellido(tfApellido.getText());
                j.setCi(parseInt(tfCI.getText()));
                j.setDireccion(tfDireccion.getText());
                j.setFechaNac(dcFechaNac.getDate());
                j.setTelefono(tfTelefono.getText());
                j.setFechaIngreso(dcFechaIngreso.getDate());
                j.setTipo((TipoSocio)cbTipoSocio.getSelectedItem());
                j.setVigente(true);

                j.setCarnetHabilitante(dcCarnetHab.getDate());
                j.setPlantel((Categoria) cbCat.getSelectedItem());
                j.setVenCi(dcVenCi.getDate());
                j.setTipoCarnet(cbTipoCarnet.getSelectedIndex());

                if(checkF.isSelected()){
                    addFamiliar(j);  
                }     
                else if(cbCuotas.getSelectedIndex()==0){
                    Familia fa =  new Familia();
                    Conexion.getInstance().persist(fa);
                    j.setFamilia(fa);
                    j.setRol(true);
                    Conexion.getInstance().persist(j);
                    JOptionPane.showMessageDialog(this, "Socio "+j.getNombre()+" "+j.getApellido()+" agregado con éxito.", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    Familia fa =  new Familia();
                    Conexion.getInstance().persist(fa);
                    j.setFamilia(fa);
                    j.setRol(true);
                    j.setCuotas(new ArrayList<Cuota>());
                    Cuota cuota = (Cuota) cbCuotas.getSelectedItem();
                    if(cuota.getSocios()!=null){
                        cuota.getSocios().add(j);
                        Conexion.getInstance().merge(cuota);
                        JOptionPane.showMessageDialog(this, "Socio "+j.getNombre()+" "+j.getApellido()+" agregado con éxito.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else{
                        cuota.setSocios(new ArrayList<Socio>());
                        cuota.getSocios().add(j);
                        Conexion.getInstance().merge(cuota);
                        JOptionPane.showMessageDialog(this, "Socio "+j.getNombre()+" "+j.getApellido()+" agregado con éxito.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
            else{
                Socio j = new Socio();
                j.setNombre(tfNombre.getText());
                j.setApellido(tfApellido.getText());
                j.setCi(parseInt(tfCI.getText()));
                j.setDireccion(tfDireccion.getText());
                j.setFechaNac(dcFechaNac.getDate());
                j.setTelefono(tfTelefono.getText());
                j.setFechaIngreso(dcFechaIngreso.getDate());
                j.setTipo((TipoSocio)cbTipoSocio.getSelectedItem());
                j.setVigente(true);

                if(checkF.isSelected())
                    addFamiliar(j);    
                else if(cbCuotas.getSelectedIndex()==0){
                    Familia fa =  new Familia();
                    Conexion.getInstance().persist(fa);
                    j.setFamilia(fa);
                    j.setRol(true);
                    Conexion.getInstance().persist(j);
                    JOptionPane.showMessageDialog(this, "Socio "+j.getNombre()+" "+j.getApellido()+" agregado con éxito.", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    Familia fa =  new Familia();
                    Conexion.getInstance().persist(fa);
                    j.setFamilia(fa);
                    j.setRol(true);
                    j.setCuotas(new ArrayList<Cuota>());
                    Cuota cuota = (Cuota) cbCuotas.getSelectedItem();
                    if(cuota.getSocios()!=null){
                        cuota.getSocios().add(j);
                        Conexion.getInstance().merge(cuota);
                        JOptionPane.showMessageDialog(this, "Socio "+j.getNombre()+" "+j.getApellido()+" agregado con éxito.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else{
                        cuota.setSocios(new ArrayList<Socio>());
                        cuota.getSocios().add(j);
                        Conexion.getInstance().merge(cuota);
                        JOptionPane.showMessageDialog(this, "Socio "+j.getNombre()+" "+j.getApellido()+" agregado con éxito.", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }
                } 
            }

            limpiar();
        }
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(tFamiliares.getSelectedRowCount()==1){
            DefaultTableModel mdl = (DefaultTableModel) tFamiliares.getModel();
            mdl.removeRow(tFamiliares.getSelectedRow());
            //cargarFamiliares();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbTipoSocioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoSocioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoSocioActionPerformed

    private void tFamiliaresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tFamiliaresMouseClicked
        // TODO add your handling code here:
        if(tFamiliares.getSelectedRowCount()==1){
            sel = (Socio) tFamiliares.getValueAt(tFamiliares.getSelectedRow(), 0);
            
            if((boolean) tFamiliares.getValueAt(tFamiliares.getSelectedRow(), 3)){
                for(int i=0; i < tFamiliares.getRowCount();i++){
                    if(i ==tFamiliares.getSelectedRow())
                        tFamiliares.setValueAt(true, i, 3);
                    else
                        tFamiliares.setValueAt(false, i, 3);
                }
            }
        }
    }//GEN-LAST:event_tFamiliaresMouseClicked

    private void cbCuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCuotasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCuotasActionPerformed

    private void checkJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkJActionPerformed
        // TODO add your handling code here:
        Jugador(checkJ.isSelected());
    }//GEN-LAST:event_checkJActionPerformed

    private void cbTipoCarnetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoCarnetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoCarnetActionPerformed

    private void checkFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkFActionPerformed
        // TODO add your handling code here:
        Familiar(checkF.isSelected());
    }//GEN-LAST:event_checkFActionPerformed

    private void cbCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCatActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        int fsize;
        String apellido;
        if(principal()){
            if(f==null){
                f = new Familia();
                //f.setSocios(ls);
                Conexion.getInstance().persist(f);
                fsize = 0;
            }
            else
                fsize = f.getSocios().size();

            for(int i=fsize;i<tFamiliares.getRowCount();i++){
                if(tFamiliares.getValueAt(i, 0).getClass() == Socio.class){
                    Socio so = (Socio) tFamiliares.getValueAt(i, 0);
                    so.setFamilia(f);
                    so.setRol((boolean)tFamiliares.getValueAt(i, 3));

                    if((boolean)tFamiliares.getValueAt(i, 3) && cbCuotas2.getSelectedIndex()!=0){
                        so.setCuotas(new ArrayList<Cuota>());
                        Cuota cuota = (Cuota) cbCuotas2.getSelectedItem();
                        if(cuota.getSocios()!=null){
                            cuota.getSocios().add(so);
                        }
                        else{
                            cuota.setSocios(new ArrayList<Socio>());
                            cuota.getSocios().add(so);
                        }
                        so.getCuotas().add(cuota);
                        Conexion.getInstance().merge(cuota);
                    }
                    else
                        Conexion.getInstance().persist(so);
                }
                else{
                    Jugador ju = (Jugador) tFamiliares.getValueAt(i, 0);
                    ju.setFamilia(f);
                    ju.setRol((boolean)tFamiliares.getValueAt(i, 3));
                    if((boolean)tFamiliares.getValueAt(i, 3))
                        apellido  = ju.getApellido();

                    if((boolean)tFamiliares.getValueAt(i, 3) && cbCuotas2.getSelectedIndex()!=0){
                        ju.setCuotas(new ArrayList<Cuota>());
                        Cuota cuota = (Cuota) cbCuotas2.getSelectedItem();
                        if(cuota.getSocios()!=null){
                            cuota.getSocios().add(ju);
                        }
                        else{
                            cuota.setSocios(new ArrayList<Socio>());
                            cuota.getSocios().add(ju);
                        }
                        ju.getCuotas().add(cuota);
                        Conexion.getInstance().merge(cuota);
                    }
                    else
                        Conexion.getInstance().persist(ju);
                }
            }
            JOptionPane.showMessageDialog(this, "Familia agregada con éxito.", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
        else
            JOptionPane.showMessageDialog(this, "Seleccione el socio principal de la familia.", "Error", JOptionPane.ERROR_MESSAGE);
        if(vol==1)
            volver();
        else
            limpiarFamilia();
    }//GEN-LAST:event_btnConfirmarActionPerformed

    public boolean principal(){
        for(int i=0;i<tFamiliares.getRowCount();i++){
            if((boolean)tFamiliares.getValueAt(i, 3))
                return true;
        }
        return false;
    }
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        checkF.setSelected(false);
        Familiar(false);
        DefaultTableModel mdl = (DefaultTableModel) tFamiliares.getModel();
        mdl.setRowCount(0);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbCuotas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCuotas2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCuotas2ActionPerformed

    public void Jugador(boolean b){
        for(Component component : panelJugador.getComponents()) {
            component.setEnabled(b);
        }
    }
    
    public void Familiar(boolean b){
        for(Component component : panelFamilia.getComponents()) {
            component.setEnabled(b);
        }
        tFamiliares.setEnabled(b);
        btnConfirmar.setVisible(b);
        btnCancelar.setVisible(b);
        cbCuotas.setEnabled(!b);
    }
    public void AgregarNuevosFamiliares(){
        for(Component component : panelFamilia.getComponents()) {
            component.setEnabled(true);
        }
        tFamiliares.setEnabled(true);
        btnConfirmar.setVisible(true);
        btnCancelar.setVisible(true);
        cbCuotas.setEnabled(false);
        cbCuotas2.setEnabled(false);
        checkF.setVisible(false);
        checkF.setSelected(true);
        DefaultTableModel dtm =  (DefaultTableModel) tFamiliares.getModel();
        
    }
    
    public void limpiar(){
        tfNombre.setText("");
        tfApellido.setText("");
        tfDireccion.setText("");
        tfTelefono.setText("");
        tfCI.setText("");
        dcFechaNac.setDate(null);
        dcCarnetHab.setDate(null);
        dcVenCi.setDate(null);
    }
    public void limpiarFamilia(){
        f=null;
        checkF.setSelected(false);
        Familiar(false);
        DefaultTableModel mdl = (DefaultTableModel) tFamiliares.getModel();
        mdl.setRowCount(0);
    }
    public boolean CiValida(int ci){
        return true;
    }
    public static boolean esCIValida(String ci) {
        if(ci.length() != 7 && ci.length() != 8){
            return false;
        }
        else{
            try{
            Integer.parseInt(ci);
            }
            catch (NumberFormatException e){
                return false;
            }
        }

        int digVerificador = Integer.parseInt((ci.charAt(ci.length() - 1)) + "" ) ;
        int[] factores;
        if(ci.length() == 7){ // CI viejas
            factores = new int[]{9, 8, 7, 6, 3, 4};
        }
        else{
            factores = new int[]{2, 9, 8, 7, 6, 3, 4};
        }


        int suma = 0;
        //for(int i=0; i int digito = Integer.parseInt(ci.charAt(i) + "" ) ;
        for(int i = 0; i <ci.length()-1;i++){
            int digito = Integer.parseInt(ci.charAt(i) + "" );
            if(digito != 0)
                suma += digito * factores[ i ];
        }
        
        

        int resto = suma % 10;
        int checkdigit = 10 - resto;

        if(checkdigit == 10){
        return (digVerificador == 0);
        }
        else {
        return (checkdigit == digVerificador) ;
        }
    }
    
    public void  volver(){
        for(int d = 0 ;d<tFamiliares.getRowCount();d++){
            if((boolean) tFamiliares.getValueAt(d, 3)){
                Socio so = (Socio) tFamiliares.getValueAt(d, 0);
                Jugador ju = Conexion.getInstance().findJugador(so.getCi());
                if(ju!=null){
                    DetallesJugador dj = new DetallesJugador(main,ju);
                    main.AbrirDetallesJugador(dj);
                }
                else{
                    DetallesSocio dj = new DetallesSocio(main,(Socio) tFamiliares.getValueAt(d, 1));
                    main.AbrirDetallesSocio(dj);
                }
            }
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JComboBox<String> cbCat;
    private javax.swing.JComboBox<String> cbCuotas;
    private javax.swing.JComboBox<String> cbCuotas2;
    private javax.swing.JComboBox<String> cbTipoCarnet;
    private javax.swing.JComboBox<String> cbTipoSocio;
    private javax.swing.JCheckBox checkF;
    private javax.swing.JCheckBox checkJ;
    private com.toedter.calendar.JDateChooser dcCarnetHab;
    private com.toedter.calendar.JDateChooser dcFechaIngreso;
    private com.toedter.calendar.JDateChooser dcFechaNac;
    private com.toedter.calendar.JDateChooser dcVenCi;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lCarnet1;
    private javax.swing.JLabel lPlantel;
    private javax.swing.JLabel lTipoCarnet;
    private javax.swing.JLabel lVenCarnet;
    private javax.swing.JPanel panelFamilia;
    private javax.swing.JPanel panelJugador;
    private javax.swing.JTable tFamiliares;
    private javax.swing.JTextField tfApellido;
    private javax.swing.JTextField tfCI;
    private javax.swing.JTextField tfDireccion;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfTelefono;
    // End of variables declaration//GEN-END:variables
}
